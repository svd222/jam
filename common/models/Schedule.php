<?php

namespace common\models;

use common\helpers\Common;
use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "{{%schedule}}".
 *
 * @property int $id
 * @property int $departure_station_id
 * @property int $departure_time
 * @property int $arrival_station_id
 * @property int $arrival_time
 * @property double $cost
 * @property int $carrier_id
 * @property int $schedule_by_day_of_week calculated as a bitwise sum (and) of the days of the week (from 1 to 7)
 * @property string $travelTime
 *
 * @property Station $arrivalStation
 * @property Carrier $carrier
 * @property Station $departureStation
 */
class Schedule extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%schedule}}';
    }

    public function fields()
    {
        $fields = parent::fields();

        $fields = ArrayHelper::merge($fields, ['travelTime' => function($model, $field) {
            $common = new Common();
            return $common->getTravelTime($this->departure_time, $this->arrival_time);
        }]);

        $fields = ArrayHelper::merge($fields, ['arrivalStation' => 'arrivalStation', 'departureStation' => 'departureStation', 'carrier' => 'carrier']);

        return $fields;
    }

    /**
     * @var string $travelTime Virtual field
     */
    private $travelTime;

    public function getTravelTime()
    {
        return $this->travelTime;
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['departure_station_id', 'departure_time', 'arrival_station_id', 'arrival_time', 'cost', 'carrier_id', 'schedule_by_day_of_week'], 'required'],
            [['departure_station_id', 'departure_time', 'arrival_station_id', 'arrival_time', 'carrier_id', 'schedule_by_day_of_week'], 'integer'],
            [['cost'], 'number'],
            [['arrival_station_id'], 'exist', 'skipOnError' => true, 'targetClass' => Station::className(), 'targetAttribute' => ['arrival_station_id' => 'id']],
            [['carrier_id'], 'exist', 'skipOnError' => true, 'targetClass' => Carrier::className(), 'targetAttribute' => ['carrier_id' => 'id']],
            [['departure_station_id'], 'exist', 'skipOnError' => true, 'targetClass' => Station::className(), 'targetAttribute' => ['departure_station_id' => 'id']],
            [['travelTime'], 'safe'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('schedule', 'ID'),
            'departure_station_id' => Yii::t('schedule', 'Departure Station ID'),
            'departure_time' => Yii::t('schedule', 'Departure Time'),
            'arrival_station_id' => Yii::t('schedule', 'Arrival Station ID'),
            'arrival_time' => Yii::t('schedule', 'Arrival Time'),
            'cost' => Yii::t('schedule', 'Cost'),
            'carrier_id' => Yii::t('schedule', 'Carrier ID'),
            'schedule_by_day_of_week' => Yii::t('schedule', 'Schedule by day of week'),
            'travelTime' => Yii::t('schedule', 'Travel Time'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getArrivalStation()
    {
        return $this->hasOne(Station::className(), ['id' => 'arrival_station_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCarrier()
    {
        return $this->hasOne(Carrier::className(), ['id' => 'carrier_id']);
    }

    private static $days = [
        1 => 'Mon',
        2 => 'Tue',
        4 => 'Wed',
        8 => 'Thu',
        16 => 'Fri',
        32 => 'Sat',
        64 => 'Sunday'
    ];

    public static function getDays()
    {
        return self::$days;
    }

    /**
     * Converts array $schedule_by_day_of_week to integer tosave into db
     *
     * @param bool $insert
     * @return bool
     */
    /*public function beforeSave($insert)
    {
        $common = new Common();
        $this->schedule_by_day_of_week = $common->getBitSum($this->schedule_by_day_of_week);
        return parent::beforeSave($insert);
    }*/

    /**
     * Converts integer $schedule_by_day_of_week to human readable format
     */
    public function afterFind()
    {
        $common = new Common();
        $this->schedule_by_day_of_week = $common->getIntersection(self::$days, $this->schedule_by_day_of_week);
        $this->travelTime = $common->getTravelTime($this->departure_time, $this->arrival_time);
        parent::afterFind(); // TODO: Change the autogenerated stub
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDepartureStation()
    {
        return $this->hasOne(Station::className(), ['id' => 'departure_station_id']);
    }

    /**
     * {@inheritdoc}
     * @return ScheduleQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new ScheduleQuery(get_called_class());
    }
}
